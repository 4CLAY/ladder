#cloud-config
runcmd:
  - |
    echo "Updating package lists..." | tee -a /var/log/init.log
    sudo apt update -y
    echo "Installing curl, socat, and sqlite..." | tee -a /var/log/init.log
    sudo apt install -y curl socat sqlite
    echo "Updating package lists again and installing ca-certificates..." | tee -a /var/log/init.log
    sudo apt-get update && apt-get install -yqq --no-install-recommends ca-certificates

    echo "Configuring network settings..." | tee -a /var/log/init.log
    echo "net.core.default_qdisc=fq" | tee -a /etc/sysctl.conf
    echo "net.ipv4.tcp_congestion_control=bbr" | tee -a /etc/sysctl.conf
    sysctl -p

    echo "Verifying BBR is enabled..." | tee -a /var/log/init.log
    if [[ $(sysctl net.ipv4.tcp_congestion_control | awk '{print $3}') == "bbr" ]]; then
        echo -e "BBR has been enabled successfully." | tee -a /var/log/init.log
    else
        echo -e "Failed to enable BBR. Please check your system configuration." | tee -a /var/log/init.log
    fi

    echo "Installing certbot..." | tee -a /var/log/init.log
    sudo apt-get install certbot -y
    echo "Obtaining SSL certificate..." | tee -a /var/log/init.log
    certbot certonly --standalone --agree-tos --register-unsafely-without-email -d ${host} >> /var/log/init.log 2>&1

    echo "Downloading and setting up x-ui..." | tee -a /var/log/init.log
    cd /root/
    wget https://github.com/MHSanaei/3x-ui/releases/latest/download/x-ui-linux-amd64.tar.gz
    tar zxvf x-ui-linux-amd64.tar.gz
    chmod +x x-ui/x-ui x-ui/bin/xray-linux-* x-ui/x-ui.sh
    cp x-ui/x-ui.sh /usr/bin/x-ui
    cp -f x-ui/x-ui.service /etc/systemd/system/
    mv x-ui/ /usr/local/

    echo "Reloading systemd daemon and enabling x-ui service..." | tee -a /var/log/init.log
    systemctl daemon-reload
    systemctl enable x-ui

    echo "Initializing database..." | tee -a /var/log/init.log
    cat << 'EOF' > init-db.sql
    BEGIN TRANSACTION;
    CREATE TABLE `users` (`id` integer PRIMARY KEY AUTOINCREMENT,`username` text,`password` text,`login_secret` text);
    INSERT INTO users VALUES(1,'${x_ui_username}','${x_ui_password}','');
    CREATE TABLE `inbounds` (`id` integer PRIMARY KEY AUTOINCREMENT,`user_id` integer,`up` integer,`down` integer,`total` integer,`remark` text,`enable` numeric,`expiry_time` integer,`listen` text,`port` integer,`protocol` text,`settings` text,`stream_settings` text,`tag` text,`sniffing` text,`allocate` text,CONSTRAINT `uni_inbounds_tag` UNIQUE (`tag`));
    INSERT INTO inbounds VALUES(1,1,84644,0,0,'vless',1,0,'',15953,'vless',replace('{\n  "clients": [\n    {\n      "id": "628df0dc-5adb-42fd-8195-4933db49eb45",\n      "flow": "",\n      "email": "8cssjphf",\n      "limitIp": 0,\n      "totalGB": 0,\n      "expiryTime": 0,\n      "enable": true,\n      "tgId": "",\n      "subId": "udou5nu45tq1so71",\n      "reset": 0\n    }\n  ],\n  "decryption": "none",\n  "fallbacks": []\n}','\n',char(10)),replace('{\n  "network": "tcp",\n  "security": "reality",\n  "externalProxy": [],\n  "realitySettings": {\n    "show": false,\n    "xver": 0,\n    "dest": "yahoo.com:443",\n    "serverNames": [\n      "yahoo.com",\n      "www.yahoo.com"\n    ],\n    "privateKey": "cNnKLGUroeHA23GdARLVfNsuQMDz7BJgqDKMf1Uoz2I",\n    "minClient": "",\n    "maxClient": "",\n    "maxTimediff": 0,\n    "shortIds": [\n      "6c5f39dbc226",\n      "8e15b540f7",\n      "f6ed707a2c3b83",\n      "7e2822c077844ea7",\n      "ba37",\n      "a4",\n      "fb253c",\n      "c5f768eb"\n    ],\n    "settings": {\n      "publicKey": "qnpJhKaHFfKpqpOgiKoO0hdjLjQisuY_bwxqbbrNbSw",\n      "fingerprint": "random",\n      "serverName": "",\n      "spiderX": "/"\n    }\n  },\n  "tcpSettings": {\n    "acceptProxyProtocol": false,\n    "header": {\n      "type": "none"\n    }\n  }\n}','\n',char(10)),'inbound-15953',replace('{\n  "enabled": true,\n  "destOverride": [\n    "http",\n    "tls",\n    "quic",\n    "fakedns"\n  ],\n  "metadataOnly": false,\n  "routeOnly": false\n}','\n',char(10)),replace('{\n  "strategy": "always",\n  "refresh": 5,\n  "concurrency": 3\n}','\n',char(10)));
    INSERT INTO inbounds VALUES(2,1,52808,4154258,0,'test',1,0,'',21644,'trojan',replace('{\n  "clients": [\n    {\n      "password": "dQUWbcwECl",\n      "flow": "",\n      "email": "kn6izxrq",\n      "limitIp": 0,\n      "totalGB": 0,\n      "expiryTime": 0,\n      "enable": true,\n      "tgId": "",\n      "subId": "w2bqu7j4ozz5jih2",\n      "reset": 0\n    }\n  ],\n  "fallbacks": []\n}','\n',char(10)),replace('{\n  "network": "tcp",\n  "security": "tls",\n  "externalProxy": [],\n  "tlsSettings": {\n    "serverName": "",\n    "minVersion": "1.2",\n    "maxVersion": "1.3",\n    "cipherSuites": "",\n    "rejectUnknownSni": false,\n    "disableSystemRoot": false,\n    "enableSessionResumption": false,\n    "certificates": [\n      {\n        "certificateFile": "/etc/letsencrypt/live/${host}/fullchain.pem",\n        "keyFile": "/etc/letsencrypt/live/${host}/privkey.pem",\n        "ocspStapling": 3600,\n        "oneTimeLoading": false,\n        "usage": "encipherment",\n        "buildChain": false\n      }\n    ],\n    "alpn": [\n      "h3",\n      "h2",\n      "http/1.1"\n    ],\n    "settings": {\n      "allowInsecure": false,\n      "fingerprint": ""\n    }\n  },\n  "tcpSettings": {\n    "acceptProxyProtocol": false,\n    "header": {\n      "type": "none"\n    }\n  }\n}','\n',char(10)),'inbound-21644',replace('{\n  "enabled": true,\n  "destOverride": [\n    "http",\n    "tls",\n    "quic",\n    "fakedns"\n  ],\n  "metadataOnly": false,\n  "routeOnly": false\n}','\n',char(10)),replace('{\n  "strategy": "always",\n  "refresh": 5,\n  "concurrency": 3\n}','\n',char(10)));
    INSERT INTO inbounds VALUES(3,1,320,0,0,'ðŸ‡¯ðŸ‡µæµ‹è¯•',1,0,'',53007,'trojan',replace('{\n  "clients": [\n    {\n      "password": "JVGEu5s0bA",\n      "flow": "",\n      "email": "f3uvgfly",\n      "limitIp": 0,\n      "totalGB": 0,\n      "expiryTime": 0,\n      "enable": true,\n      "tgId": "",\n      "subId": "iqpm99o5qg79j2y5",\n      "reset": 0\n    }\n  ],\n  "fallbacks": []\n}','\n',char(10)),replace('{\n  "network": "tcp",\n  "security": "tls",\n  "externalProxy": [],\n  "tlsSettings": {\n    "serverName": "",\n    "minVersion": "1.2",\n    "maxVersion": "1.3",\n    "cipherSuites": "",\n    "rejectUnknownSni": false,\n    "disableSystemRoot": false,\n    "enableSessionResumption": false,\n    "certificates": [\n      {\n        "certificateFile": "/etc/letsencrypt/live/${host}/fullchain.pem",\n        "keyFile": "/etc/letsencrypt/live/${host}/privkey.pem",\n        "ocspStapling": 3600,\n        "oneTimeLoading": false,\n        "usage": "encipherment",\n        "buildChain": false\n      }\n    ],\n    "alpn": [\n      "h3",\n      "h2",\n      "http/1.1"\n    ],\n    "settings": {\n      "allowInsecure": false,\n      "fingerprint": ""\n    }\n  },\n  "tcpSettings": {\n    "acceptProxyProtocol": false,\n    "header": {\n      "type": "none"\n    }\n  }\n}','\n',char(10)),'inbound-53007',replace('{\n  "enabled": true,\n  "destOverride": [\n    "http",\n    "tls",\n    "quic",\n    "fakedns"\n  ],\n  "metadataOnly": false,\n  "routeOnly": false\n}','\n',char(10)),replace('{\n  "strategy": "always",\n  "refresh": 5,\n  "concurrency": 3\n}','\n',char(10)));
    
    CREATE TABLE `outbound_traffics` (`id` integer PRIMARY KEY AUTOINCREMENT,`tag` text,`up` integer DEFAULT 0,`down` integer DEFAULT 0,`total` integer DEFAULT 0,CONSTRAINT `uni_outbound_traffics_tag` UNIQUE (`tag`));
    INSERT INTO outbound_traffics VALUES(1,'direct',49728,4154258,4203986);
    INSERT INTO outbound_traffics VALUES(2,'blocked',0,0,0);
    
    CREATE TABLE `settings` (`id` integer PRIMARY KEY AUTOINCREMENT,`key` text,`value` text);
    INSERT INTO settings VALUES(1,'secret','19wuyckLolgAmlSVyO5lUBl7wAcZwuXY');
    INSERT INTO settings VALUES(2,'webListen','');
    INSERT INTO settings VALUES(3,'webDomain','');
    INSERT INTO settings VALUES(4,'webPort','${x_ui_port}');
    INSERT INTO settings VALUES(5,'webCertFile','/etc/letsencrypt/live/${host}/fullchain.pem');
    INSERT INTO settings VALUES(6,'webKeyFile','/etc/letsencrypt/live/${host}/privkey.pem');
    INSERT INTO settings VALUES(7,'webBasePath','/${x_ui_path}/');

    CREATE TABLE `inbound_client_ips` (`id` integer PRIMARY KEY AUTOINCREMENT,`client_email` text,`ips` text,CONSTRAINT `uni_inbound_client_ips_client_email` UNIQUE (`client_email`));
    CREATE TABLE `client_traffics` (`id` integer PRIMARY KEY AUTOINCREMENT,`inbound_id` integer,`enable` numeric,`email` text,`up` integer,`down` integer,`expiry_time` integer,`total` integer,`reset` integer DEFAULT 0,CONSTRAINT `fk_inbounds_client_stats` FOREIGN KEY (`inbound_id`) REFERENCES `inbounds`(`id`),CONSTRAINT `uni_client_traffics_email` UNIQUE (`email`));
    INSERT INTO client_traffics VALUES(3,3,1,'8cssjphf',0,0,0,0,0);
    INSERT INTO client_traffics VALUES(4,4,1,'kn6izxrq',50241,4154258,0,0,0);
    INSERT INTO client_traffics VALUES(6,6,1,'f3uvgfly',4,0,0,0,0);

    COMMIT;
    EOF

    echo "Executing database initialization script..." | tee -a /var/log/init.log
    mkdir -p /etc/x-ui/
    sqlite3 /etc/x-ui/x-ui.db < init-db.sql >> /var/log/init.log 2>&1

    sleep 1
    echo "Database initialization completed." | tee -a /var/log/init.log
    ls /etc/x-ui/ | tee -a /var/log/init.log
    lsof /etc/x-ui/x-ui.db | tee -a /var/log/init.log
    sqlite3 /etc/x-ui/x-ui.db "SELECT * FROM users;" | tee -a /var/log/init.log

    echo "Restarting x-ui service..." | tee -a /var/log/init.log
    systemctl restart x-ui